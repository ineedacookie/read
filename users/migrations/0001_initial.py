# Generated by Django 5.1 on 2024-08-29 16:54

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='School',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, help_text='School Name', max_length=255, null=True)),
                ('created_date', models.DateField(auto_now_add=True, verbose_name='Created Date')),
                ('updated_date', models.DateField(auto_now=True, null=True, verbose_name='Updated Date')),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('user_type', models.CharField(choices=[('teacher', 'Teacher'), ('student', 'Student'), ('parent', 'Parent'), ('administrator', 'Administrator')], max_length=20)),
                ('username', models.CharField(max_length=50, unique=True, verbose_name='Username')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Email')),
                ('change_email', models.EmailField(blank=True, default=None, max_length=254, null=True)),
                ('first_name', models.CharField(blank=True, max_length=50, null=True, verbose_name='First Name')),
                ('middle_name', models.CharField(blank=True, max_length=50, null=True, verbose_name='Middle Name')),
                ('last_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='Last Name')),
                ('verified', models.BooleanField(blank=True, default=False)),
                ('created_date', models.DateField(auto_now_add=True, null=True, verbose_name='Created Date')),
                ('updated_date', models.DateField(auto_now=True, null=True, verbose_name='Updated Date')),
                ('full_name', models.CharField(blank=True, default=None, max_length=210, null=True, verbose_name='Full Name')),
                ('active', models.BooleanField(blank=True, default=True, null=True, verbose_name='Active')),
                ('marked_for_deletion', models.DateField(blank=True, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
                ('school', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='users.school')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Classroom',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Classroom Name', max_length=255)),
                ('created_date', models.DateField(auto_now_add=True, verbose_name='Created Date')),
                ('updated_date', models.DateField(auto_now=True, null=True, verbose_name='Updated Date')),
                ('students', models.ManyToManyField(limit_choices_to={'user_type': 'student'}, related_name='classrooms', to=settings.AUTH_USER_MODEL)),
                ('teacher', models.ForeignKey(blank=True, limit_choices_to={'user_type': 'teacher'}, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ReadingGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Reading Group Name', max_length=255)),
                ('created_date', models.DateField(auto_now_add=True, verbose_name='Created Date')),
                ('updated_date', models.DateField(auto_now=True, null=True, verbose_name='Updated Date')),
                ('managers', models.ManyToManyField(limit_choices_to=models.Q(('user_type', 'teacher'), ('user_type', 'administrator'), _connector='OR'), related_name='managed_reading_groups', to=settings.AUTH_USER_MODEL)),
                ('students', models.ManyToManyField(limit_choices_to={'user_type': 'student'}, related_name='reading_groups', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='StudentParentRelation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateField(auto_now_add=True, verbose_name='Created Date')),
                ('updated_date', models.DateField(auto_now=True, null=True, verbose_name='Updated Date')),
                ('parent', models.ForeignKey(limit_choices_to={'user_type': 'parent'}, on_delete=django.db.models.deletion.CASCADE, related_name='children', to=settings.AUTH_USER_MODEL)),
                ('student', models.ForeignKey(limit_choices_to={'user_type': 'student'}, on_delete=django.db.models.deletion.CASCADE, related_name='parents', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
